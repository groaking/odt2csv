"""
odt2csv
Created by: Samarthya Lykamanuella
Establishment year: 2025

This program converts an OOMMF DataTable output (ODT) into a CSV-like file.
Created on 2023-07-08 by Samarthya Lykamanuella (github.com/groaking).
Adapted into PyPI on 2025-04-14 by Samarthya Lykamanuella (github.com/groaking).

LICENSE NOTICE:
===============

This file is part of odt2csv.

odt2csv is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

odt2csv is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with odt2csv. If not, see <https://www.gnu.org/licenses/>.
"""

# This file is executable using "python -m odt2csv".

from . import convert as cv

# For parsing the input/output file name arguments
# (Default package from Python installation. No PIP extension required)
from argparse import RawTextHelpFormatter
import argparse
import glob

# Setting up the argument parser
# SOURCE: https://www.geeksforgeeks.org/optparse-module-in-python
# SOURCE: https://docs.python.org/3/library/optparse.html
parser = argparse.ArgumentParser(
    description='''
Converts an ODT file generated by OOMMF into a CSV-formatted file.

All possible parser behaviors:
- "fail":(default) returns error if the input ODT file has two or more data headers,
           usually caused by two simulations outputting two different data table into the same ODT file.
- "new" : if there are two or more data headers in the ODT file, convert only the newest data.
- "raw" : convert all data in the ODT file, ignoring the differences of data headers and preserving
          only the first data header. may break the CSV table.
    '''.strip(),
    epilog='odt2csv was created by Samarthya Lykamanuella on 2023-07-08 and adapted into PyPI on 2025-04-14.\nVisit https://www.github.com/groaking for more.',
    formatter_class=RawTextHelpFormatter
)
parser.add_argument('-s', '--suffix', dest='suffix', type=str, help='the preferred file name suffix of the output CSV file')
parser.add_argument('-p', '--parser', dest='parser_behavior', type=str, default='fail', help='the intended parser behavior of the converter. see above')
parser.add_argument('-k', '--keep-unit', dest='keep_unit', type=str, default='false', help='whether to keep the unit name of each column (the unit names will be kept as the second row of the CSV file). "1" for true, "0" for false. defaults to false')
parser.add_argument('files', nargs='*', type=str, help='the list of ODT files to be converted, which also supports glob pattern')

# Parse arguments
args = parser.parse_args()

fi = args.files
suf = args.suffix
par = args.parser_behavior
kee = None

# Validating the input arguments.
if fi.__len__() == 0:
    print('Input file is not specified. Please do. (Or specify odt2csv --help to see all the options.)')
    exit(1)

if par not in ['raw', 'new', 'fail', '1', '2', '3']:
    print('You can only specify "raw", "new", or "fail" in the parser behavior argument.')
    exit(1)

if str(args.keep_unit) == '1' or str(args.keep_unit).lower() == 'true':
    kee = True
elif str(args.keep_unit) == '0' or str(args.keep_unit).lower() == 'false':
    kee = False
else:
    print(f'Argument not understood for parameter "keep_unit": {args.keep_unit}. Please only specify "True" or "False"')
    exit(1)

# Iterating through every input file.
for l in fi:
    cv(odt_input=l, output_suffix=suf, keep_unit=kee, parser_behavior=par)
    